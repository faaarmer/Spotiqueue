;;; BEGIN keybindings.scm
;;;
;;; Copyright Â© 2021 paul at denknerd dot org
;;;
;;; This file contains code used to define custom keymaps and bindings.
(define-module (spotiqueue keybindings)
  #:use-module (ice-9 format)
  #:use-module (ice-9 optargs))
(module-export-all! (current-module))

;;; struct key {
;;;   bool ctrl,  // C-
;;;   bool cmd,   // a.k.a. Hyper, H-
;;;   bool alt,   // a.k.a. Meta, M-
;;;   bool shift, // S-
;;;   symbol key
;;; }

;; I'm sure there's a nicer way to accomplish this, but for now it'll have to do.
(define <kbd>
  (make-vtable
   "pwpwpwpwpw" ; p = protected/boxed/SCM value, w = writable (deprecated/ignored)
   (lambda (kbd port)
     ;; I keep getting warnings, probably because (ice-9 format) isn't yet loaded at compile time... ^.-
     (format port "<<key> ~@[C-~]~@[H-~]~@[M-~]~@[S-~]~a>"
             (kbd-ctrl kbd)
             (kbd-cmd kbd)
             (kbd-alt kbd)
             (kbd-shift kbd)
             (kbd-key kbd)))))

(define (kbd-ctrl kbd)
  (struct-ref kbd 0))
(define (kbd-cmd kbd)
  (struct-ref kbd 1))
(define (kbd-alt kbd)
  (struct-ref kbd 2))
(define (kbd-shift kbd)
  (struct-ref kbd 3))
(define (kbd-key kbd)
  (struct-ref kbd 4))

(define C-f (make-struct/no-tail <kbd> #t #f #f #f 'ANSI_F)) ; this would represent C-f in as-low-level
                                        ; as i can muster, for now.

(define* (kbd keysym #:key
              (ctrl #f)
              (cmd #f)
              (alt #f)
              (shift #f))
  (make-struct/no-tail <kbd> ctrl cmd alt shift keysym))

(define M-x (kbd 'ANSI_X #:alt #t))

(define keycode->sym (make-hash-table 128))

(hashq-set! keycode->sym 0 (quote ANSI_A))
(hashq-set! keycode->sym 1 (quote ANSI_S))
(hashq-set! keycode->sym 2 (quote ANSI_D))
(hashq-set! keycode->sym 3 (quote ANSI_F))
(hashq-set! keycode->sym 4 (quote ANSI_H))
(hashq-set! keycode->sym 5 (quote ANSI_G))
(hashq-set! keycode->sym 6 (quote ANSI_Z))
(hashq-set! keycode->sym 7 (quote ANSI_X))
(hashq-set! keycode->sym 8 (quote ANSI_C))
(hashq-set! keycode->sym 9 (quote ANSI_V))
(hashq-set! keycode->sym 11 (quote ANSI_B))
(hashq-set! keycode->sym 12 (quote ANSI_Q))
(hashq-set! keycode->sym 13 (quote ANSI_W))
(hashq-set! keycode->sym 14 (quote ANSI_E))
(hashq-set! keycode->sym 15 (quote ANSI_R))
(hashq-set! keycode->sym 16 (quote ANSI_Y))
(hashq-set! keycode->sym 17 (quote ANSI_T))
(hashq-set! keycode->sym 18 (quote ANSI_1))
(hashq-set! keycode->sym 19 (quote ANSI_2))
(hashq-set! keycode->sym 20 (quote ANSI_3))
(hashq-set! keycode->sym 21 (quote ANSI_4))
(hashq-set! keycode->sym 22 (quote ANSI_6))
(hashq-set! keycode->sym 23 (quote ANSI_5))
(hashq-set! keycode->sym 24 (quote ANSI_Equal))
(hashq-set! keycode->sym 25 (quote ANSI_9))
(hashq-set! keycode->sym 26 (quote ANSI_7))
(hashq-set! keycode->sym 27 (quote ANSI_Minus))
(hashq-set! keycode->sym 28 (quote ANSI_8))
(hashq-set! keycode->sym 29 (quote ANSI_0))
(hashq-set! keycode->sym 30 (quote ANSI_RightBracket))
(hashq-set! keycode->sym 31 (quote ANSI_O))
(hashq-set! keycode->sym 32 (quote ANSI_U))
(hashq-set! keycode->sym 33 (quote ANSI_LeftBracket))
(hashq-set! keycode->sym 34 (quote ANSI_I))
(hashq-set! keycode->sym 35 (quote ANSI_P))
(hashq-set! keycode->sym 37 (quote ANSI_L))
(hashq-set! keycode->sym 38 (quote ANSI_J))
(hashq-set! keycode->sym 39 (quote ANSI_Quote))
(hashq-set! keycode->sym 40 (quote ANSI_K))
(hashq-set! keycode->sym 41 (quote ANSI_Semicolon))
(hashq-set! keycode->sym 42 (quote ANSI_Backslash))
(hashq-set! keycode->sym 43 (quote ANSI_Comma))
(hashq-set! keycode->sym 44 (quote ANSI_Slash))
(hashq-set! keycode->sym 45 (quote ANSI_N))
(hashq-set! keycode->sym 46 (quote ANSI_M))
(hashq-set! keycode->sym 47 (quote ANSI_Period))
(hashq-set! keycode->sym 50 (quote ANSI_Grave))
(hashq-set! keycode->sym 65 (quote ANSI_KeypadDecimal))
(hashq-set! keycode->sym 67 (quote ANSI_KeypadMultiply))
(hashq-set! keycode->sym 69 (quote ANSI_KeypadPlus))
(hashq-set! keycode->sym 71 (quote ANSI_KeypadClear))
(hashq-set! keycode->sym 75 (quote ANSI_KeypadDivide))
(hashq-set! keycode->sym 76 (quote ANSI_KeypadEnter))
(hashq-set! keycode->sym 78 (quote ANSI_KeypadMinus))
(hashq-set! keycode->sym 81 (quote ANSI_KeypadEquals))
(hashq-set! keycode->sym 82 (quote ANSI_Keypad0))
(hashq-set! keycode->sym 83 (quote ANSI_Keypad1))
(hashq-set! keycode->sym 84 (quote ANSI_Keypad2))
(hashq-set! keycode->sym 85 (quote ANSI_Keypad3))
(hashq-set! keycode->sym 86 (quote ANSI_Keypad4))
(hashq-set! keycode->sym 87 (quote ANSI_Keypad5))
(hashq-set! keycode->sym 88 (quote ANSI_Keypad6))
(hashq-set! keycode->sym 89 (quote ANSI_Keypad7))
(hashq-set! keycode->sym 91 (quote ANSI_Keypad8))
(hashq-set! keycode->sym 92 (quote ANSI_Keypad9))
(hashq-set! keycode->sym 36 (quote Return))
(hashq-set! keycode->sym 48 (quote Tab))
(hashq-set! keycode->sym 49 (quote Space))
(hashq-set! keycode->sym 51 (quote Delete))
(hashq-set! keycode->sym 53 (quote Escape))
(hashq-set! keycode->sym 55 (quote Command))
(hashq-set! keycode->sym 56 (quote Shift))
(hashq-set! keycode->sym 57 (quote CapsLock))
(hashq-set! keycode->sym 58 (quote Option))
(hashq-set! keycode->sym 59 (quote Control))
(hashq-set! keycode->sym 54 (quote RightCommand))
(hashq-set! keycode->sym 60 (quote RightShift))
(hashq-set! keycode->sym 61 (quote RightOption))
(hashq-set! keycode->sym 62 (quote RightControl))
(hashq-set! keycode->sym 63 (quote Function))
(hashq-set! keycode->sym 64 (quote F17))
(hashq-set! keycode->sym 72 (quote VolumeUp))
(hashq-set! keycode->sym 73 (quote VolumeDown))
(hashq-set! keycode->sym 74 (quote Mute))
(hashq-set! keycode->sym 79 (quote F18))
(hashq-set! keycode->sym 80 (quote F19))
(hashq-set! keycode->sym 90 (quote F20))
(hashq-set! keycode->sym 96 (quote F5))
(hashq-set! keycode->sym 97 (quote F6))
(hashq-set! keycode->sym 98 (quote F7))
(hashq-set! keycode->sym 99 (quote F3))
(hashq-set! keycode->sym 100 (quote F8))
(hashq-set! keycode->sym 101 (quote F9))
(hashq-set! keycode->sym 103 (quote F11))
(hashq-set! keycode->sym 105 (quote F13))
(hashq-set! keycode->sym 106 (quote F16))
(hashq-set! keycode->sym 107 (quote F14))
(hashq-set! keycode->sym 109 (quote F10))
(hashq-set! keycode->sym 111 (quote F12))
(hashq-set! keycode->sym 113 (quote F15))
(hashq-set! keycode->sym 114 (quote Help))
(hashq-set! keycode->sym 115 (quote Home))
(hashq-set! keycode->sym 116 (quote PageUp))
(hashq-set! keycode->sym 117 (quote ForwardDelete))
(hashq-set! keycode->sym 118 (quote F4))
(hashq-set! keycode->sym 119 (quote End))
(hashq-set! keycode->sym 120 (quote F2))
(hashq-set! keycode->sym 121 (quote PageDown))
(hashq-set! keycode->sym 122 (quote F1))
(hashq-set! keycode->sym 123 (quote LeftArrow))
(hashq-set! keycode->sym 124 (quote RightArrow))
(hashq-set! keycode->sym 125 (quote DownArrow))
(hashq-set! keycode->sym 126 (quote UpArrow))


;;; END keybindings.scm
